{
  "paths": {
    "/category/add": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "Retrieve category document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": []
      }
    },
    "/categories": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCategory"
              }
            }
          }
        }
      }
    },
    "/categories/count": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": []
      }
    },
    "/categories/{slug}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/categories/{id}": {
      "put": {
        "deprecated": false,
        "description": "Update a record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCategory"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a record",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "required": [
          "id",
          "top_in_nav",
          "top_in_page",
          "format_profuct"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name_fr": {
            "type": "string"
          },
          "name_en": {
            "type": "string"
          },
          "name_ar": {
            "type": "string"
          },
          "slug": {
            "type": "uid"
          },
          "parent_category_list": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "categories": {
                "type": "array",
                "items": {
                  "required": [
                    "id",
                    "top_in_nav",
                    "top_in_page",
                    "format_profuct"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name_fr": {
                      "type": "string"
                    },
                    "name_en": {
                      "type": "string"
                    },
                    "name_ar": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "uid"
                    },
                    "parent_category_list": {
                      "type": "component"
                    },
                    "top_in_nav": {
                      "type": "boolean"
                    },
                    "top_in_page": {
                      "type": "boolean"
                    },
                    "format_profuct": {
                      "type": "string",
                      "enum": [
                        "none",
                        "Service",
                        "Formation",
                        "Job",
                        "Item_and_Equipment",
                        "Product",
                        "Transport",
                        "Divers"
                      ]
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_by": {
                      "type": "string"
                    },
                    "updated_by": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "top_in_nav": {
            "type": "boolean",
            "default": false
          },
          "top_in_page": {
            "type": "boolean",
            "default": false
          },
          "format_profuct": {
            "type": "string",
            "default": "none",
            "enum": [
              "none",
              "Service",
              "Formation",
              "Job",
              "Item_and_Equipment",
              "Product",
              "Transport",
              "Divers"
            ]
          },
          "products": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "title",
                "status",
                "description"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "category": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "bloked",
                    "draft",
                    "published"
                  ]
                },
                "view": {
                  "type": "integer"
                },
                "like": {
                  "type": "integer"
                },
                "search": {
                  "type": "integer"
                },
                "lastConnect": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "adress": {
                  "type": "component"
                },
                "images": {
                  "type": "component"
                },
                "sector_work": {
                  "type": "string",
                  "enum": [
                    "public_administration",
                    "Agriculture",
                    "Agri_food",
                    "automobiles",
                    "Construction_and_civil_engineering",
                    "chemistry_and_para_chemistry",
                    "trade_distribution",
                    "communication_advertising_Media",
                    "Cosmetic",
                    "E_Commerce",
                    "energy_environment",
                    "Education_training",
                    "studies_advises_assistance",
                    "industry",
                    "telecom_computing",
                    "leisure_culture_sports",
                    "not_disclosed",
                    "health_social",
                    "business_services",
                    "headquarters",
                    "subcontracting",
                    "textiles",
                    "logistic_transport",
                    "wood_stone_metal_leather_work",
                    "others"
                  ]
                },
                "sector_product": {
                  "type": "string",
                  "enum": [
                    "Agri_food",
                    "food",
                    "chemistry_and_para_chemistry",
                    "commerce_distribution",
                    "communication_gublicity_Media",
                    "cosmetic",
                    "e_commerce",
                    "energy_environment",
                    "industry",
                    "telecom_computing",
                    "leisure_culture_sports",
                    "not_disclosed",
                    "social_health",
                    "business_services",
                    "textiles",
                    "woodwork_gjieces_metals_leather",
                    "others"
                  ]
                },
                "profession": {
                  "type": "string",
                  "enum": [
                    "Industrial_buyer",
                    "Acoustician",
                    "Computer_network_administrator",
                    "Maintenance_agent",
                    "Logistics_agent",
                    "Continuous_improvement_coordinator",
                    "Sales_assistant",
                    "Executive_assistant",
                    "HR_assistant",
                    "Electrical_equipment_winder",
                    "Forklift_operator",
                    "Business_manager",
                    "Boilermaker",
                    "Team_leader",
                    "Product_manager",
                    "Mechanical_project_manager",
                    "Coach_skills_development",
                    "Accountant",
                    "Production_line_operator",
                    "Management_controller",
                    "Cleavage",
                    "Industrial_designer",
                    "Draftsman__designer",
                    "Administrative_and_financial_director",
                    "Director_of_design_office",
                    "Commercial_director",
                    "Director_of_company",
                    "Production_manager",
                    "R_D_director",
                    "Human_resources_director",
                    "Technical_director",
                    "Electrical_technician",
                    "Ergonomist",
                    "Trainer",
                    "Technical_trainer",
                    "Milling_machine",
                    "Payroll_manager",
                    "Hydraulic_engineer",
                    "Calculation__simulation_engineer",
                    "Test_engineer",
                    "Electronic_design_engineer",
                    "Production_engineer",
                    "Electrical_engineer",
                    "Industrial_engineer",
                    "Industrial_IT_engineer",
                    "Materials_engineer",
                    "Methods_engineer",
                    "R_D_engineer",
                    "Nuclear_safety_and_dismantling_engineer",
                    "Systems_engineer",
                    "Electronic_production_integrator",
                    "Legal_expert",
                    "Mechatronics_engineer",
                    "Aluminum_carpenter",
                    "Metallier_Carpentier",
                    "Fitter__assembler",
                    "Fitter__cable_worker",
                    "Forge_operator",
                    "Production_operator",
                    "Metal_processing_operator",
                    "Foundry_operator",
                    "Operator_composite_materials",
                    "Surface_treatment_operator",
                    "Machining_operator",
                    "Toolmaker",
                    "Industrial_painter",
                    "Industrial_production_system_pilot",
                    "Industrial_polisher",
                    "Technical_writer",
                    "Communication_manager",
                    "Production_unit_manager",
                    "Industrial_analysis_laboratory_manager",
                    "Training_manager",
                    "Industrial_and_logistics_management_manager",
                    "HSE_manager",
                    "Maintenance_manager",
                    "Marketing_manager",
                    "Methods_manager",
                    "Scheduling_manager",
                    "IT_project_manager",
                    "Quality_manager",
                    "HR_manager",
                    "Welder",
                    "Test_technician",
                    "Industrial_analysis_laboratory_technician",
                    "Production_technician",
                    "Electronics_test_technician",
                    "Information_systems_technician",
                    "Automation_technician",
                    "Technician_in_design_and_electronic_development",
                    "Metrology_technician",
                    "Refrigeration_and_air_conditioning_technician",
                    "HSE_technician",
                    "Industrial_IT_technician",
                    "Industrial_equipment_installation_technician",
                    "Electronic_installation_and_maintenance_technician",
                    "Logistics_technician",
                    "Maintenance_technician",
                    "Methods_technician",
                    "Photonics_technician",
                    "Quality_technician",
                    "R_D_technician",
                    "Customer_support_technician",
                    "Surface_treatment_technician",
                    "Machining_technician",
                    "Sales_technician",
                    "Turner",
                    "Industrial_pipefitter"
                  ]
                },
                "society": {
                  "type": "string"
                },
                "region": {
                  "type": "string",
                  "enum": [
                    "remote",
                    "regional",
                    "national"
                  ]
                },
                "vehicle": {
                  "type": "string",
                  "enum": [
                    "car",
                    "commercial_car",
                    "pickup",
                    "mini_bus",
                    "van",
                    "truck__dump_truck",
                    "truck__refrigerated_truck",
                    "truck__isothermal",
                    "truck__tanker",
                    "truck__bucket_truck",
                    "truck__roll_amplifier",
                    "truck__tow_truck",
                    "truck__other",
                    "semi_trailer__low_loader",
                    "semi_trailer__single",
                    "semi_trailer__container_carrier",
                    "semi_trailer__tank",
                    "semi_trailer__other",
                    "Tuff_trailer",
                    "Machine__loader",
                    "Machine__mini_loader",
                    "Machine__excavator",
                    "Machine__backhoe_loader",
                    "Machine__bulldozer",
                    "Machine__scraper",
                    "Machine__steamroller",
                    "Machine__dumper",
                    "Machine__grader",
                    "Gear__others",
                    "agricultural_machinery__tractor",
                    "agricultural_machinery__combine_harvester",
                    "agricultural_machinery__forage_harvester",
                    "agricultural_machinery__harvester",
                    "agricultural_machinery__mower",
                    "agricultural_machinery__other",
                    "others"
                  ]
                },
                "Mark": {
                  "type": "string",
                  "enum": [
                    "EDIMETA",
                    "HEWLETT_PACKARD",
                    "EPSON",
                    "CENPAC",
                    "BROTHER",
                    "ELBA",
                    "CANON",
                    "CEP",
                    "KARCHER",
                    "FELLOWES",
                    "AVERY",
                    "DURABLE",
                    "PILOT",
                    "LOTUS_TORK",
                    "BOTT",
                    "OXFORD",
                    "PENTEL",
                    "LEXMARK",
                    "TRODAT",
                    "LA_COURONNE",
                    "EDDING",
                    "TRESTON",
                    "LEITZ",
                    "OKI",
                    "Three_M",
                    "BIMOS",
                    "NOBO",
                    "SAMSUNG",
                    "HOLZKRAFT",
                    "STABILO",
                    "ESSELTE",
                    "TARIFOLD",
                    "DORTHZ",
                    "FACOM",
                    "NUMATIC",
                    "RICOH",
                    "TENG_TOOLS",
                    "DREUMEX",
                    "FESTOOL",
                    "REXEL",
                    "RUBBERMAID",
                    "DELL",
                    "ARDEA",
                    "SAFE_TOOL",
                    "UNILUX",
                    "VESTIBURO",
                    "SIDAMO",
                    "UHU",
                    "PLANORGA",
                    "VIKAN",
                    "STAEDTLER",
                    "other"
                  ]
                },
                "typestate": {
                  "type": "string",
                  "enum": [
                    "new",
                    "almost_new",
                    "second_hand",
                    "rental"
                  ]
                },
                "formation_category": {
                  "type": "string",
                  "enum": [
                    "Industry_training",
                    "Computer_training",
                    "Mechanical_Hydraulic_Pneumatic_Training",
                    "Language_training",
                    "Surface_treatment_training",
                    "Safety_training",
                    "Production_training",
                    "Management_training",
                    "Engineer_training",
                    "Logistics_training",
                    "Maintenance_training",
                    "Apprenticeship",
                    "Electricity_and_Electronics_training",
                    "Choice_and_use_of_materials",
                    "Commercial_training",
                    "Quality_Control_Training",
                    "Management__Communication_training",
                    "Metrology_training",
                    "Continuing_Professional_Training",
                    "Automation_training",
                    "Regulation__Instrumentation_training",
                    "Training_in_aeraulics_and_ventilation",
                    "Training_in_industrial_acoustics",
                    "Construction_training_Construction__Real_estate",
                    "Environmental_training",
                    "Laboratory_training",
                    "Communication_training",
                    "Microengineering_training",
                    "Scientific_or_Mathematical_Training"
                  ]
                },
                "author": {
                  "type": "string"
                },
                "likers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cv_link": {
                  "type": "string"
                },
                "work_proposal": {
                  "type": "string",
                  "enum": [
                    "request",
                    "offer"
                  ]
                },
                "diploma": {
                  "type": "string",
                  "enum": [
                    "none",
                    "cep",
                    "bem",
                    "bac",
                    "bt",
                    "bts",
                    "licence",
                    "master",
                    "doctorat",
                    "other"
                  ]
                },
                "transport_service": {
                  "type": "string",
                  "enum": [
                    "location",
                    "driver",
                    "other"
                  ]
                },
                "email": {
                  "type": "component"
                },
                "phone": {
                  "type": "component"
                },
                "service_category": {
                  "type": "component"
                },
                "video": {
                  "type": "component"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewCategory": {
        "required": [
          "top_in_nav",
          "top_in_page",
          "format_profuct"
        ],
        "properties": {
          "name_fr": {
            "type": "string"
          },
          "name_en": {
            "type": "string"
          },
          "name_ar": {
            "type": "string"
          },
          "slug": {
            "type": "uid"
          },
          "parent_category_list": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "categories": {
                "type": "array",
                "items": {
                  "required": [
                    "id",
                    "top_in_nav",
                    "top_in_page",
                    "format_profuct"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name_fr": {
                      "type": "string"
                    },
                    "name_en": {
                      "type": "string"
                    },
                    "name_ar": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "uid"
                    },
                    "parent_category_list": {
                      "type": "component"
                    },
                    "top_in_nav": {
                      "type": "boolean"
                    },
                    "top_in_page": {
                      "type": "boolean"
                    },
                    "format_profuct": {
                      "type": "string",
                      "enum": [
                        "none",
                        "Service",
                        "Formation",
                        "Job",
                        "Item_and_Equipment",
                        "Product",
                        "Transport",
                        "Divers"
                      ]
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_by": {
                      "type": "string"
                    },
                    "updated_by": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "top_in_nav": {
            "type": "boolean",
            "default": false
          },
          "top_in_page": {
            "type": "boolean",
            "default": false
          },
          "format_profuct": {
            "type": "string",
            "default": "none",
            "enum": [
              "none",
              "Service",
              "Formation",
              "Job",
              "Item_and_Equipment",
              "Product",
              "Transport",
              "Divers"
            ]
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Category"
    }
  ]
}