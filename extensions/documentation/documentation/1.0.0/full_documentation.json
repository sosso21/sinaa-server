{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "DOCUMENTATION",
    "description": "",
    "termsOfService": "YOUR_TERMS_OF_SERVICE_URL",
    "contact": {
      "name": "TEAM",
      "email": "contact-email@something.io",
      "url": "mywebsite.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-generation-date": "10/10/2021 4:46:47 AM"
  },
  "x-strapi-config": {
    "path": "/documentation",
    "showGeneratedFiles": true,
    "generateDefaultResponse": true
  },
  "servers": [
    {
      "url": "http://localhost:1337",
      "description": "Development server"
    },
    {
      "url": "YOUR_STAGING_SERVER",
      "description": "Staging server"
    },
    {
      "url": "YOUR_PRODUCTION_SERVER",
      "description": "Production server"
    }
  ],
  "externalDocs": {
    "description": "Find out more",
    "url": "https://strapi.io/documentation/developer-docs/latest/getting-started/introduction.html"
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/category/add": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "Retrieve category document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": []
      }
    },
    "/categories": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCategory"
              }
            }
          }
        }
      }
    },
    "/categories/count": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": []
      }
    },
    "/categories/{slug}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/categories/{id}": {
      "put": {
        "deprecated": false,
        "description": "Update a record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCategory"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a record",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/clients/{id}": {
      "get": {
        "deprecated": false,
        "description": "Find one clients record",
        "responses": {
          "200": {
            "description": "Retrieve clients document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Clients"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/connect": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/changeUserInfo": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EditEmail": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/confirmEmail/{token}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/sendMeEmailConfirmation/{langNEmail}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "langNEmail",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/sendEmailToResetPwd/{langNEmail}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "langNEmail",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/resetPasswordForget": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/updateUser": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/promo/user": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/promo/purcent/{code}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/promo/PayMe": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/getAffiliationProgramInfo/{token}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/admin/setUser": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sentNewsLetter": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/homepage": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ],
        "parameters": []
      }
    },
    "/api/findAll": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ],
        "parameters": []
      }
    },
    "/products/{id}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a record",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/products": {
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        }
      }
    },
    "/sliders": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Slider"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Slider"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Slider"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Slider"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSlider"
              }
            }
          }
        }
      }
    },
    "/sliders/count": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Slider"
        ],
        "parameters": []
      }
    },
    "/sliders/{id}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Slider"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Slider"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Slider"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Slider"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSlider"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a record",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Slider"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/email/": {
      "post": {
        "deprecated": false,
        "description": "Send an email",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Email - Email"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email/test": {
      "post": {
        "deprecated": false,
        "description": "Send an test email",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Email - Email"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email/settings": {
      "get": {
        "deprecated": false,
        "description": "Get the email settings",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Email - Email"
        ],
        "parameters": []
      }
    },
    "/upload/": {
      "post": {
        "deprecated": false,
        "description": "Upload a file",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upload/files/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the total number of uploaded files",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": []
      }
    },
    "/upload/files": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all file documents",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": []
      }
    },
    "/upload/files/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a single file depending on its id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete an uploaded file",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/upload/search/{id}": {
      "get": {
        "deprecated": false,
        "description": "Search for an uploaded file",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/roles/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a role depending on its id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/roles": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all role documents",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersPermissionsRole"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsRole"
              }
            }
          }
        }
      }
    },
    "/users-permissions/roles/{role}": {
      "put": {
        "deprecated": false,
        "description": "Update a role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsRole"
              }
            }
          }
        }
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/search/{id}": {
      "get": {
        "deprecated": false,
        "description": "Search for users",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersPermissionsUser"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      }
    },
    "/connect/*": {
      "get": {
        "deprecated": false,
        "description": "Connect a provider",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": []
      }
    },
    "/auth/local": {
      "post": {
        "deprecated": false,
        "description": "Login a user using the identifiers email and password",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/local/register": {
      "post": {
        "deprecated": false,
        "description": "Register a new user with the default role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsUser"
              }
            }
          }
        }
      }
    },
    "/auth/{provider}/callback": {
      "get": {
        "deprecated": false,
        "description": "Successfull redirection after approving a provider",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "deprecated": false,
        "description": "Send the reset password email link",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "deprecated": false,
        "description": "Reset user password with a code (resetToken)",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/email-confirmation": {
      "get": {
        "deprecated": false,
        "description": "Validate a user account",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": []
      }
    },
    "/auth/send-email-confirmation": {
      "post": {
        "deprecated": false,
        "description": "Send a confirmation email to user",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all user documents",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersPermissionsUser"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the logged in user information",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": []
      }
    },
    "/users/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a single user depending on his id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update an existing user",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsUser"
              }
            }
          }
        }
      },
      "delete": {
        "deprecated": false,
        "description": "Delete an existing user",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "required": [
          "id",
          "top_in_nav",
          "top_in_page",
          "format_profuct"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name_fr": {
            "type": "string"
          },
          "name_en": {
            "type": "string"
          },
          "name_ar": {
            "type": "string"
          },
          "slug": {
            "type": "uid"
          },
          "parent_category_list": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "categories": {
                "type": "array",
                "items": {
                  "required": [
                    "id",
                    "top_in_nav",
                    "top_in_page",
                    "format_profuct"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name_fr": {
                      "type": "string"
                    },
                    "name_en": {
                      "type": "string"
                    },
                    "name_ar": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "uid"
                    },
                    "parent_category_list": {
                      "type": "component"
                    },
                    "top_in_nav": {
                      "type": "boolean"
                    },
                    "top_in_page": {
                      "type": "boolean"
                    },
                    "format_profuct": {
                      "type": "string",
                      "enum": [
                        "none",
                        "Service",
                        "Formation",
                        "Job",
                        "Item_and_Equipment",
                        "Product",
                        "Transport",
                        "Other"
                      ]
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_by": {
                      "type": "string"
                    },
                    "updated_by": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "top_in_nav": {
            "type": "boolean",
            "default": false
          },
          "top_in_page": {
            "type": "boolean",
            "default": false
          },
          "format_profuct": {
            "type": "string",
            "default": "none",
            "enum": [
              "none",
              "Service",
              "Formation",
              "Job",
              "Item_and_Equipment",
              "Product",
              "Transport",
              "Other"
            ]
          },
          "products": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "title",
                "status",
                "description"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "category": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "draft",
                    "published"
                  ]
                },
                "view": {
                  "type": "integer"
                },
                "like": {
                  "type": "integer"
                },
                "search": {
                  "type": "integer"
                },
                "lastConnect": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "adress": {
                  "type": "component"
                },
                "images": {
                  "type": "component"
                },
                "sector_work": {
                  "type": "string",
                  "enum": [
                    "public_administration",
                    "Agriculture",
                    "Agri_food",
                    "automobiles",
                    "Construction_and_civil_engineering",
                    "chemistry_and_para_chemistry",
                    "trade_distribution",
                    "communication_advertising_Media",
                    "Cosmetic",
                    "E_Commerce",
                    "energy_environment",
                    "Education_training",
                    "studies_advises_assistance",
                    "industry",
                    "telecom_computing",
                    "leisure_culture_sports",
                    "not_disclosed",
                    "health_social",
                    "business_services",
                    "headquarters",
                    "subcontracting",
                    "textiles",
                    "logistic_transport",
                    "wood_stone_metal_leather_work",
                    "others"
                  ]
                },
                "sector_product": {
                  "type": "string",
                  "enum": [
                    "Agri_food",
                    "food",
                    "chemistry_and_para_chemistry",
                    "commerce_distribution",
                    "communication_gublicity_Media",
                    "cosmetic",
                    "e_commerce",
                    "energy_environment",
                    "industry",
                    "telecom_computing",
                    "leisure_culture_sports",
                    "not_disclosed",
                    "social_health",
                    "business_services",
                    "textiles",
                    "woodwork_gjiéces_metals_leather",
                    "others"
                  ]
                },
                "profession": {
                  "type": "string",
                  "enum": [
                    "Industrial_buyer",
                    "Acoustician",
                    "Computer_network_administrator",
                    "Maintenance_agent",
                    "Logistics_agent",
                    "Continuous_improvement_coordinator",
                    "Sales_assistant",
                    "Executive_assistant",
                    "HR_assistant",
                    "Electrical_equipment_winder",
                    "Forklift_operator",
                    "Business_manager",
                    "Communication_manager",
                    "Boilermaker",
                    "Team_leader",
                    "Product_manager",
                    "Mechanical_project_manager",
                    "Coach,_skills_development",
                    "Accountant",
                    "Production_line_operator",
                    "Management_controller",
                    "Cleavage",
                    "Industrial_designer",
                    "Draftsman__designer",
                    "Administrative_and_financial_director",
                    "Director_of_design_office",
                    "Commercial_director",
                    "Director_of_company",
                    "Production_manager",
                    "R&D_director",
                    "Human_resources_director",
                    "Technical_director",
                    "Electrical_technician",
                    "Ergonomist",
                    "Trainer",
                    "Technical_trainer",
                    "Milling_machine",
                    "Payroll_manager",
                    "Hydraulic_engineer",
                    "Calculation__simulation_engineer",
                    "Test_engineer",
                    "Electronic_design_engineer",
                    "Production_engineer",
                    "Electrical_engineer",
                    "Industrial_engineer",
                    "Industrial_IT_engineer",
                    "Materials_engineer",
                    "Methods_engineer",
                    "R&D_engineer",
                    "Nuclear_safety_and_dismantling_engineer",
                    "Systems_engineer",
                    "Electronic_production_integrator",
                    "Legal_expert",
                    "Mechatronics_engineer",
                    "Aluminum_carpenter",
                    "Metallier_Carpentier",
                    "Fitter__assembler",
                    "Fitter__cable_worker",
                    "Forge_operator",
                    "Production_operator",
                    "Metal_processing_operator",
                    "Foundry_operator",
                    "Operator_composite_materials",
                    "Surface_treatment_operator",
                    "Machining_operator",
                    "Toolmaker",
                    "Toolmaker",
                    "Industrial_painter",
                    "Industrial_production_system_pilot",
                    "Industrial_polisher",
                    "Technical_writer",
                    "Communication_manager",
                    "Production_unit_manager",
                    "Industrial_analysis_laboratory_manager",
                    "Training_manager",
                    "Industrial_and_logistics_management_manager",
                    "HSE_manager",
                    "Maintenance_manager",
                    "Marketing_manager",
                    "Methods_manager",
                    "Scheduling_manager",
                    "IT_project_manager",
                    "Quality_manager",
                    "HR_manager",
                    "Welder",
                    "Test_technician",
                    "Industrial_analysis_laboratory_technician",
                    "Production_technician",
                    "Electronics_test_technician",
                    "Information_systems_technician",
                    "Automation_technician",
                    "Technician_in_design_and_electronic_development",
                    "Metrology_technician",
                    "Refrigeration_and_air_conditioning_technician",
                    "HSE_technician",
                    "Industrial_IT_technician",
                    "Industrial_equipment_installation_technician",
                    "Electronic_installation_and_maintenance_technician",
                    "Logistics_technician",
                    "Maintenance_technician",
                    "Methods_technician",
                    "Photonics_technician",
                    "Quality_technician",
                    "R&D_technician",
                    "Customer_support_technician",
                    "Surface_treatment_technician",
                    "Machining_technician",
                    "Sales_technician",
                    "Turner",
                    "Industrial_pipefitter"
                  ]
                },
                "society": {
                  "type": "string"
                },
                "region": {
                  "type": "string",
                  "enum": [
                    "regional",
                    "national"
                  ]
                },
                "vehicle": {
                  "type": "string",
                  "enum": [
                    "car",
                    "commercial_car",
                    "pickup",
                    "mini_bus",
                    "van",
                    "truck__dump_truck",
                    "truck__refrigerated_truck",
                    "truck__isothermal",
                    "truck__tanker",
                    "truck__bucket_truck",
                    "truck__roll_amplifier",
                    "truck__tow_truck",
                    "truck__other",
                    "semi_trailer__low_loader",
                    "semi_trailer__single",
                    "semi_trailer__container_carrier",
                    "semi_trailer__tank",
                    "semi_trailer__other",
                    "Tuff_trailer",
                    "Machine__loader",
                    "Machine__mini_loader",
                    "Machine__excavator",
                    "Machine__backhoe_loader",
                    "Machine__bulldozer",
                    "Machine__scraper",
                    "Machine__steamroller",
                    "Machine__dumper",
                    "Machine__grader",
                    "Gear__others",
                    "agricultural_machinery__tractor",
                    "agricultural_machinery__combine_harvester",
                    "agricultural_machinery__forage_harvester",
                    "agricultural_machinery__harvester",
                    "agricultural_machinery__mower",
                    "agricultural_machinery__other",
                    "others"
                  ]
                },
                "Mark": {
                  "type": "string"
                },
                "typestate": {
                  "type": "string",
                  "enum": [
                    "new",
                    "almost_new",
                    "second_hand",
                    "rental"
                  ]
                },
                "formation_category": {
                  "type": "string",
                  "enum": [
                    "Industry_training",
                    "Computer_training",
                    "Mechanical_Hydraulic,_Pneumatic_Training",
                    "Language_training ",
                    "Surface_treatment_training",
                    "Safety_training",
                    "Production_training",
                    "Management_training",
                    "Engineer_training",
                    "Logistics_training",
                    "Maintenance_training",
                    "Apprenticeship",
                    "Electricity_and_Electronics_training",
                    "Choice_and_use_of_materials",
                    "Commercial_training",
                    "Quality_Control_Training",
                    "Management__Communication_training",
                    "Metrology_training",
                    "Continuing_Professional_Training",
                    "Automation_training",
                    "Regulation__Instrumentation_training",
                    "Training in_aeraulics_and_ventilation",
                    "Training_in_industrial_acoustics",
                    "Construction_training_Construction__Real_estate",
                    "Environmental_training",
                    "Laboratory_training",
                    "Communication_training",
                    "Microengineering_training",
                    "Scientific_or_Mathematical_Training"
                  ]
                },
                "author": {
                  "type": "string"
                },
                "likers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cv_link": {
                  "type": "string"
                },
                "work_proposal": {
                  "type": "string",
                  "enum": [
                    "request",
                    "offer"
                  ]
                },
                "diploma": {
                  "type": "string",
                  "enum": [
                    "none",
                    "cep",
                    "bem",
                    "bac",
                    "bt",
                    "bts",
                    "licence",
                    "master",
                    "doctorat",
                    "other"
                  ]
                },
                "transport_service": {
                  "type": "string",
                  "enum": [
                    "none",
                    "location",
                    "driver"
                  ]
                },
                "email": {
                  "type": "component"
                },
                "phone": {
                  "type": "component"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewCategory": {
        "required": [
          "top_in_nav",
          "top_in_page",
          "format_profuct"
        ],
        "properties": {
          "name_fr": {
            "type": "string"
          },
          "name_en": {
            "type": "string"
          },
          "name_ar": {
            "type": "string"
          },
          "slug": {
            "type": "uid"
          },
          "parent_category_list": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "categories": {
                "type": "array",
                "items": {
                  "required": [
                    "id",
                    "top_in_nav",
                    "top_in_page",
                    "format_profuct"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name_fr": {
                      "type": "string"
                    },
                    "name_en": {
                      "type": "string"
                    },
                    "name_ar": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "uid"
                    },
                    "parent_category_list": {
                      "type": "component"
                    },
                    "top_in_nav": {
                      "type": "boolean"
                    },
                    "top_in_page": {
                      "type": "boolean"
                    },
                    "format_profuct": {
                      "type": "string",
                      "enum": [
                        "none",
                        "Service",
                        "Formation",
                        "Job",
                        "Item_and_Equipment",
                        "Product",
                        "Transport",
                        "Other"
                      ]
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_by": {
                      "type": "string"
                    },
                    "updated_by": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "top_in_nav": {
            "type": "boolean",
            "default": false
          },
          "top_in_page": {
            "type": "boolean",
            "default": false
          },
          "format_profuct": {
            "type": "string",
            "default": "none",
            "enum": [
              "none",
              "Service",
              "Formation",
              "Job",
              "Item_and_Equipment",
              "Product",
              "Transport",
              "Other"
            ]
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Clients": {
        "required": [
          "id",
          "username",
          "lastname",
          "firstname",
          "email",
          "pass",
          "sexe",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "uid",
            "minLength": 2
          },
          "lastname": {
            "type": "string",
            "minLength": 2
          },
          "firstname": {
            "type": "string",
            "minLength": 2
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "integer",
            "minLength": 9
          },
          "birth_day": {
            "type": "string",
            "format": "date"
          },
          "sexe": {
            "type": "string",
            "default": "none",
            "enum": [
              "homme",
              "femme",
              "none"
            ]
          },
          "wilaya": {
            "type": "string"
          },
          "commune": {
            "type": "string"
          },
          "profil_image_link": {
            "type": "string"
          },
          "instagram": {
            "type": "string"
          },
          "Twitter": {
            "type": "string"
          },
          "facebook": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": "waiting",
            "enum": [
              "blocked",
              "waiting",
              "valid"
            ]
          },
          "products": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "title",
                "status",
                "description"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "category": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "draft",
                    "published"
                  ]
                },
                "view": {
                  "type": "integer"
                },
                "like": {
                  "type": "integer"
                },
                "search": {
                  "type": "integer"
                },
                "lastConnect": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "adress": {
                  "type": "component"
                },
                "images": {
                  "type": "component"
                },
                "sector_work": {
                  "type": "string",
                  "enum": [
                    "public_administration",
                    "Agriculture",
                    "Agri_food",
                    "automobiles",
                    "Construction_and_civil_engineering",
                    "chemistry_and_para_chemistry",
                    "trade_distribution",
                    "communication_advertising_Media",
                    "Cosmetic",
                    "E_Commerce",
                    "energy_environment",
                    "Education_training",
                    "studies_advises_assistance",
                    "industry",
                    "telecom_computing",
                    "leisure_culture_sports",
                    "not_disclosed",
                    "health_social",
                    "business_services",
                    "headquarters",
                    "subcontracting",
                    "textiles",
                    "logistic_transport",
                    "wood_stone_metal_leather_work",
                    "others"
                  ]
                },
                "sector_product": {
                  "type": "string",
                  "enum": [
                    "Agri_food",
                    "food",
                    "chemistry_and_para_chemistry",
                    "commerce_distribution",
                    "communication_gublicity_Media",
                    "cosmetic",
                    "e_commerce",
                    "energy_environment",
                    "industry",
                    "telecom_computing",
                    "leisure_culture_sports",
                    "not_disclosed",
                    "social_health",
                    "business_services",
                    "textiles",
                    "woodwork_gjiéces_metals_leather",
                    "others"
                  ]
                },
                "profession": {
                  "type": "string",
                  "enum": [
                    "Industrial_buyer",
                    "Acoustician",
                    "Computer_network_administrator",
                    "Maintenance_agent",
                    "Logistics_agent",
                    "Continuous_improvement_coordinator",
                    "Sales_assistant",
                    "Executive_assistant",
                    "HR_assistant",
                    "Electrical_equipment_winder",
                    "Forklift_operator",
                    "Business_manager",
                    "Communication_manager",
                    "Boilermaker",
                    "Team_leader",
                    "Product_manager",
                    "Mechanical_project_manager",
                    "Coach,_skills_development",
                    "Accountant",
                    "Production_line_operator",
                    "Management_controller",
                    "Cleavage",
                    "Industrial_designer",
                    "Draftsman__designer",
                    "Administrative_and_financial_director",
                    "Director_of_design_office",
                    "Commercial_director",
                    "Director_of_company",
                    "Production_manager",
                    "R&D_director",
                    "Human_resources_director",
                    "Technical_director",
                    "Electrical_technician",
                    "Ergonomist",
                    "Trainer",
                    "Technical_trainer",
                    "Milling_machine",
                    "Payroll_manager",
                    "Hydraulic_engineer",
                    "Calculation__simulation_engineer",
                    "Test_engineer",
                    "Electronic_design_engineer",
                    "Production_engineer",
                    "Electrical_engineer",
                    "Industrial_engineer",
                    "Industrial_IT_engineer",
                    "Materials_engineer",
                    "Methods_engineer",
                    "R&D_engineer",
                    "Nuclear_safety_and_dismantling_engineer",
                    "Systems_engineer",
                    "Electronic_production_integrator",
                    "Legal_expert",
                    "Mechatronics_engineer",
                    "Aluminum_carpenter",
                    "Metallier_Carpentier",
                    "Fitter__assembler",
                    "Fitter__cable_worker",
                    "Forge_operator",
                    "Production_operator",
                    "Metal_processing_operator",
                    "Foundry_operator",
                    "Operator_composite_materials",
                    "Surface_treatment_operator",
                    "Machining_operator",
                    "Toolmaker",
                    "Toolmaker",
                    "Industrial_painter",
                    "Industrial_production_system_pilot",
                    "Industrial_polisher",
                    "Technical_writer",
                    "Communication_manager",
                    "Production_unit_manager",
                    "Industrial_analysis_laboratory_manager",
                    "Training_manager",
                    "Industrial_and_logistics_management_manager",
                    "HSE_manager",
                    "Maintenance_manager",
                    "Marketing_manager",
                    "Methods_manager",
                    "Scheduling_manager",
                    "IT_project_manager",
                    "Quality_manager",
                    "HR_manager",
                    "Welder",
                    "Test_technician",
                    "Industrial_analysis_laboratory_technician",
                    "Production_technician",
                    "Electronics_test_technician",
                    "Information_systems_technician",
                    "Automation_technician",
                    "Technician_in_design_and_electronic_development",
                    "Metrology_technician",
                    "Refrigeration_and_air_conditioning_technician",
                    "HSE_technician",
                    "Industrial_IT_technician",
                    "Industrial_equipment_installation_technician",
                    "Electronic_installation_and_maintenance_technician",
                    "Logistics_technician",
                    "Maintenance_technician",
                    "Methods_technician",
                    "Photonics_technician",
                    "Quality_technician",
                    "R&D_technician",
                    "Customer_support_technician",
                    "Surface_treatment_technician",
                    "Machining_technician",
                    "Sales_technician",
                    "Turner",
                    "Industrial_pipefitter"
                  ]
                },
                "society": {
                  "type": "string"
                },
                "region": {
                  "type": "string",
                  "enum": [
                    "regional",
                    "national"
                  ]
                },
                "vehicle": {
                  "type": "string",
                  "enum": [
                    "car",
                    "commercial_car",
                    "pickup",
                    "mini_bus",
                    "van",
                    "truck__dump_truck",
                    "truck__refrigerated_truck",
                    "truck__isothermal",
                    "truck__tanker",
                    "truck__bucket_truck",
                    "truck__roll_amplifier",
                    "truck__tow_truck",
                    "truck__other",
                    "semi_trailer__low_loader",
                    "semi_trailer__single",
                    "semi_trailer__container_carrier",
                    "semi_trailer__tank",
                    "semi_trailer__other",
                    "Tuff_trailer",
                    "Machine__loader",
                    "Machine__mini_loader",
                    "Machine__excavator",
                    "Machine__backhoe_loader",
                    "Machine__bulldozer",
                    "Machine__scraper",
                    "Machine__steamroller",
                    "Machine__dumper",
                    "Machine__grader",
                    "Gear__others",
                    "agricultural_machinery__tractor",
                    "agricultural_machinery__combine_harvester",
                    "agricultural_machinery__forage_harvester",
                    "agricultural_machinery__harvester",
                    "agricultural_machinery__mower",
                    "agricultural_machinery__other",
                    "others"
                  ]
                },
                "Mark": {
                  "type": "string"
                },
                "typestate": {
                  "type": "string",
                  "enum": [
                    "new",
                    "almost_new",
                    "second_hand",
                    "rental"
                  ]
                },
                "formation_category": {
                  "type": "string",
                  "enum": [
                    "Industry_training",
                    "Computer_training",
                    "Mechanical_Hydraulic,_Pneumatic_Training",
                    "Language_training ",
                    "Surface_treatment_training",
                    "Safety_training",
                    "Production_training",
                    "Management_training",
                    "Engineer_training",
                    "Logistics_training",
                    "Maintenance_training",
                    "Apprenticeship",
                    "Electricity_and_Electronics_training",
                    "Choice_and_use_of_materials",
                    "Commercial_training",
                    "Quality_Control_Training",
                    "Management__Communication_training",
                    "Metrology_training",
                    "Continuing_Professional_Training",
                    "Automation_training",
                    "Regulation__Instrumentation_training",
                    "Training in_aeraulics_and_ventilation",
                    "Training_in_industrial_acoustics",
                    "Construction_training_Construction__Real_estate",
                    "Environmental_training",
                    "Laboratory_training",
                    "Communication_training",
                    "Microengineering_training",
                    "Scientific_or_Mathematical_Training"
                  ]
                },
                "author": {
                  "type": "string"
                },
                "likers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cv_link": {
                  "type": "string"
                },
                "work_proposal": {
                  "type": "string",
                  "enum": [
                    "request",
                    "offer"
                  ]
                },
                "diploma": {
                  "type": "string",
                  "enum": [
                    "none",
                    "cep",
                    "bem",
                    "bac",
                    "bt",
                    "bts",
                    "licence",
                    "master",
                    "doctorat",
                    "other"
                  ]
                },
                "transport_service": {
                  "type": "string",
                  "enum": [
                    "none",
                    "location",
                    "driver"
                  ]
                },
                "email": {
                  "type": "component"
                },
                "phone": {
                  "type": "component"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          },
          "likes": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "title",
                "status",
                "description"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "category": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "draft",
                    "published"
                  ]
                },
                "view": {
                  "type": "integer"
                },
                "like": {
                  "type": "integer"
                },
                "search": {
                  "type": "integer"
                },
                "lastConnect": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "adress": {
                  "type": "component"
                },
                "images": {
                  "type": "component"
                },
                "sector_work": {
                  "type": "string",
                  "enum": [
                    "public_administration",
                    "Agriculture",
                    "Agri_food",
                    "automobiles",
                    "Construction_and_civil_engineering",
                    "chemistry_and_para_chemistry",
                    "trade_distribution",
                    "communication_advertising_Media",
                    "Cosmetic",
                    "E_Commerce",
                    "energy_environment",
                    "Education_training",
                    "studies_advises_assistance",
                    "industry",
                    "telecom_computing",
                    "leisure_culture_sports",
                    "not_disclosed",
                    "health_social",
                    "business_services",
                    "headquarters",
                    "subcontracting",
                    "textiles",
                    "logistic_transport",
                    "wood_stone_metal_leather_work",
                    "others"
                  ]
                },
                "sector_product": {
                  "type": "string",
                  "enum": [
                    "Agri_food",
                    "food",
                    "chemistry_and_para_chemistry",
                    "commerce_distribution",
                    "communication_gublicity_Media",
                    "cosmetic",
                    "e_commerce",
                    "energy_environment",
                    "industry",
                    "telecom_computing",
                    "leisure_culture_sports",
                    "not_disclosed",
                    "social_health",
                    "business_services",
                    "textiles",
                    "woodwork_gjiéces_metals_leather",
                    "others"
                  ]
                },
                "profession": {
                  "type": "string",
                  "enum": [
                    "Industrial_buyer",
                    "Acoustician",
                    "Computer_network_administrator",
                    "Maintenance_agent",
                    "Logistics_agent",
                    "Continuous_improvement_coordinator",
                    "Sales_assistant",
                    "Executive_assistant",
                    "HR_assistant",
                    "Electrical_equipment_winder",
                    "Forklift_operator",
                    "Business_manager",
                    "Communication_manager",
                    "Boilermaker",
                    "Team_leader",
                    "Product_manager",
                    "Mechanical_project_manager",
                    "Coach,_skills_development",
                    "Accountant",
                    "Production_line_operator",
                    "Management_controller",
                    "Cleavage",
                    "Industrial_designer",
                    "Draftsman__designer",
                    "Administrative_and_financial_director",
                    "Director_of_design_office",
                    "Commercial_director",
                    "Director_of_company",
                    "Production_manager",
                    "R&D_director",
                    "Human_resources_director",
                    "Technical_director",
                    "Electrical_technician",
                    "Ergonomist",
                    "Trainer",
                    "Technical_trainer",
                    "Milling_machine",
                    "Payroll_manager",
                    "Hydraulic_engineer",
                    "Calculation__simulation_engineer",
                    "Test_engineer",
                    "Electronic_design_engineer",
                    "Production_engineer",
                    "Electrical_engineer",
                    "Industrial_engineer",
                    "Industrial_IT_engineer",
                    "Materials_engineer",
                    "Methods_engineer",
                    "R&D_engineer",
                    "Nuclear_safety_and_dismantling_engineer",
                    "Systems_engineer",
                    "Electronic_production_integrator",
                    "Legal_expert",
                    "Mechatronics_engineer",
                    "Aluminum_carpenter",
                    "Metallier_Carpentier",
                    "Fitter__assembler",
                    "Fitter__cable_worker",
                    "Forge_operator",
                    "Production_operator",
                    "Metal_processing_operator",
                    "Foundry_operator",
                    "Operator_composite_materials",
                    "Surface_treatment_operator",
                    "Machining_operator",
                    "Toolmaker",
                    "Toolmaker",
                    "Industrial_painter",
                    "Industrial_production_system_pilot",
                    "Industrial_polisher",
                    "Technical_writer",
                    "Communication_manager",
                    "Production_unit_manager",
                    "Industrial_analysis_laboratory_manager",
                    "Training_manager",
                    "Industrial_and_logistics_management_manager",
                    "HSE_manager",
                    "Maintenance_manager",
                    "Marketing_manager",
                    "Methods_manager",
                    "Scheduling_manager",
                    "IT_project_manager",
                    "Quality_manager",
                    "HR_manager",
                    "Welder",
                    "Test_technician",
                    "Industrial_analysis_laboratory_technician",
                    "Production_technician",
                    "Electronics_test_technician",
                    "Information_systems_technician",
                    "Automation_technician",
                    "Technician_in_design_and_electronic_development",
                    "Metrology_technician",
                    "Refrigeration_and_air_conditioning_technician",
                    "HSE_technician",
                    "Industrial_IT_technician",
                    "Industrial_equipment_installation_technician",
                    "Electronic_installation_and_maintenance_technician",
                    "Logistics_technician",
                    "Maintenance_technician",
                    "Methods_technician",
                    "Photonics_technician",
                    "Quality_technician",
                    "R&D_technician",
                    "Customer_support_technician",
                    "Surface_treatment_technician",
                    "Machining_technician",
                    "Sales_technician",
                    "Turner",
                    "Industrial_pipefitter"
                  ]
                },
                "society": {
                  "type": "string"
                },
                "region": {
                  "type": "string",
                  "enum": [
                    "regional",
                    "national"
                  ]
                },
                "vehicle": {
                  "type": "string",
                  "enum": [
                    "car",
                    "commercial_car",
                    "pickup",
                    "mini_bus",
                    "van",
                    "truck__dump_truck",
                    "truck__refrigerated_truck",
                    "truck__isothermal",
                    "truck__tanker",
                    "truck__bucket_truck",
                    "truck__roll_amplifier",
                    "truck__tow_truck",
                    "truck__other",
                    "semi_trailer__low_loader",
                    "semi_trailer__single",
                    "semi_trailer__container_carrier",
                    "semi_trailer__tank",
                    "semi_trailer__other",
                    "Tuff_trailer",
                    "Machine__loader",
                    "Machine__mini_loader",
                    "Machine__excavator",
                    "Machine__backhoe_loader",
                    "Machine__bulldozer",
                    "Machine__scraper",
                    "Machine__steamroller",
                    "Machine__dumper",
                    "Machine__grader",
                    "Gear__others",
                    "agricultural_machinery__tractor",
                    "agricultural_machinery__combine_harvester",
                    "agricultural_machinery__forage_harvester",
                    "agricultural_machinery__harvester",
                    "agricultural_machinery__mower",
                    "agricultural_machinery__other",
                    "others"
                  ]
                },
                "Mark": {
                  "type": "string"
                },
                "typestate": {
                  "type": "string",
                  "enum": [
                    "new",
                    "almost_new",
                    "second_hand",
                    "rental"
                  ]
                },
                "formation_category": {
                  "type": "string",
                  "enum": [
                    "Industry_training",
                    "Computer_training",
                    "Mechanical_Hydraulic,_Pneumatic_Training",
                    "Language_training ",
                    "Surface_treatment_training",
                    "Safety_training",
                    "Production_training",
                    "Management_training",
                    "Engineer_training",
                    "Logistics_training",
                    "Maintenance_training",
                    "Apprenticeship",
                    "Electricity_and_Electronics_training",
                    "Choice_and_use_of_materials",
                    "Commercial_training",
                    "Quality_Control_Training",
                    "Management__Communication_training",
                    "Metrology_training",
                    "Continuing_Professional_Training",
                    "Automation_training",
                    "Regulation__Instrumentation_training",
                    "Training in_aeraulics_and_ventilation",
                    "Training_in_industrial_acoustics",
                    "Construction_training_Construction__Real_estate",
                    "Environmental_training",
                    "Laboratory_training",
                    "Communication_training",
                    "Microengineering_training",
                    "Scientific_or_Mathematical_Training"
                  ]
                },
                "author": {
                  "type": "string"
                },
                "likers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cv_link": {
                  "type": "string"
                },
                "work_proposal": {
                  "type": "string",
                  "enum": [
                    "request",
                    "offer"
                  ]
                },
                "diploma": {
                  "type": "string",
                  "enum": [
                    "none",
                    "cep",
                    "bem",
                    "bac",
                    "bt",
                    "bts",
                    "licence",
                    "master",
                    "doctorat",
                    "other"
                  ]
                },
                "transport_service": {
                  "type": "string",
                  "enum": [
                    "none",
                    "location",
                    "driver"
                  ]
                },
                "email": {
                  "type": "component"
                },
                "phone": {
                  "type": "component"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewClients": {
        "required": [
          "username",
          "lastname",
          "firstname",
          "email",
          "pass",
          "sexe",
          "status"
        ],
        "properties": {
          "username": {
            "type": "uid",
            "minLength": 2
          },
          "lastname": {
            "type": "string",
            "minLength": 2
          },
          "firstname": {
            "type": "string",
            "minLength": 2
          },
          "email": {
            "type": "string"
          },
          "pass": {
            "type": "string",
            "format": "password"
          },
          "phone": {
            "type": "integer",
            "minLength": 9
          },
          "birth_day": {
            "type": "string",
            "format": "date"
          },
          "sexe": {
            "type": "string",
            "default": "none",
            "enum": [
              "homme",
              "femme",
              "none"
            ]
          },
          "wilaya": {
            "type": "string"
          },
          "commune": {
            "type": "string"
          },
          "profil_image_link": {
            "type": "string"
          },
          "instagram": {
            "type": "string"
          },
          "Twitter": {
            "type": "string"
          },
          "facebook": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": "waiting",
            "enum": [
              "blocked",
              "waiting",
              "valid"
            ]
          },
          "lastConnect": {
            "type": "string",
            "format": "date-time"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "likes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Product": {
        "required": [
          "id",
          "title",
          "status",
          "description"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "category": {
            "required": [
              "id",
              "top_in_nav",
              "top_in_page",
              "format_profuct"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name_fr": {
                "type": "string"
              },
              "name_en": {
                "type": "string"
              },
              "name_ar": {
                "type": "string"
              },
              "slug": {
                "type": "uid"
              },
              "parent_category_list": {
                "type": "component"
              },
              "top_in_nav": {
                "type": "boolean"
              },
              "top_in_page": {
                "type": "boolean"
              },
              "format_profuct": {
                "type": "string",
                "enum": [
                  "none",
                  "Service",
                  "Formation",
                  "Job",
                  "Item_and_Equipment",
                  "Product",
                  "Transport",
                  "Other"
                ]
              },
              "products": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string",
            "default": "published",
            "enum": [
              "draft",
              "published"
            ]
          },
          "view": {
            "type": "integer",
            "default": 0
          },
          "like": {
            "type": "integer",
            "default": 0
          },
          "search": {
            "type": "integer",
            "default": 0
          },
          "lastConnect": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "adress": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "wilaya": {
                  "type": "string"
                },
                "commune": {
                  "type": "string"
                }
              }
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "link"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                }
              }
            }
          },
          "sector_work": {
            "type": "string",
            "enum": [
              "public_administration",
              "Agriculture",
              "Agri_food",
              "automobiles",
              "Construction_and_civil_engineering",
              "chemistry_and_para_chemistry",
              "trade_distribution",
              "communication_advertising_Media",
              "Cosmetic",
              "E_Commerce",
              "energy_environment",
              "Education_training",
              "studies_advises_assistance",
              "industry",
              "telecom_computing",
              "leisure_culture_sports",
              "not_disclosed",
              "health_social",
              "business_services",
              "headquarters",
              "subcontracting",
              "textiles",
              "logistic_transport",
              "wood_stone_metal_leather_work",
              "others"
            ]
          },
          "sector_product": {
            "type": "string",
            "enum": [
              "Agri_food",
              "food",
              "chemistry_and_para_chemistry",
              "commerce_distribution",
              "communication_gublicity_Media",
              "cosmetic",
              "e_commerce",
              "energy_environment",
              "industry",
              "telecom_computing",
              "leisure_culture_sports",
              "not_disclosed",
              "social_health",
              "business_services",
              "textiles",
              "woodwork_gjiéces_metals_leather",
              "others"
            ]
          },
          "profession": {
            "type": "string",
            "enum": [
              "Industrial_buyer",
              "Acoustician",
              "Computer_network_administrator",
              "Maintenance_agent",
              "Logistics_agent",
              "Continuous_improvement_coordinator",
              "Sales_assistant",
              "Executive_assistant",
              "HR_assistant",
              "Electrical_equipment_winder",
              "Forklift_operator",
              "Business_manager",
              "Communication_manager",
              "Boilermaker",
              "Team_leader",
              "Product_manager",
              "Mechanical_project_manager",
              "Coach,_skills_development",
              "Accountant",
              "Production_line_operator",
              "Management_controller",
              "Cleavage",
              "Industrial_designer",
              "Draftsman__designer",
              "Administrative_and_financial_director",
              "Director_of_design_office",
              "Commercial_director",
              "Director_of_company",
              "Production_manager",
              "R&D_director",
              "Human_resources_director",
              "Technical_director",
              "Electrical_technician",
              "Ergonomist",
              "Trainer",
              "Technical_trainer",
              "Milling_machine",
              "Payroll_manager",
              "Hydraulic_engineer",
              "Calculation__simulation_engineer",
              "Test_engineer",
              "Electronic_design_engineer",
              "Production_engineer",
              "Electrical_engineer",
              "Industrial_engineer",
              "Industrial_IT_engineer",
              "Materials_engineer",
              "Methods_engineer",
              "R&D_engineer",
              "Nuclear_safety_and_dismantling_engineer",
              "Systems_engineer",
              "Electronic_production_integrator",
              "Legal_expert",
              "Mechatronics_engineer",
              "Aluminum_carpenter",
              "Metallier_Carpentier",
              "Fitter__assembler",
              "Fitter__cable_worker",
              "Forge_operator",
              "Production_operator",
              "Metal_processing_operator",
              "Foundry_operator",
              "Operator_composite_materials",
              "Surface_treatment_operator",
              "Machining_operator",
              "Toolmaker",
              "Toolmaker",
              "Industrial_painter",
              "Industrial_production_system_pilot",
              "Industrial_polisher",
              "Technical_writer",
              "Communication_manager",
              "Production_unit_manager",
              "Industrial_analysis_laboratory_manager",
              "Training_manager",
              "Industrial_and_logistics_management_manager",
              "HSE_manager",
              "Maintenance_manager",
              "Marketing_manager",
              "Methods_manager",
              "Scheduling_manager",
              "IT_project_manager",
              "Quality_manager",
              "HR_manager",
              "Welder",
              "Test_technician",
              "Industrial_analysis_laboratory_technician",
              "Production_technician",
              "Electronics_test_technician",
              "Information_systems_technician",
              "Automation_technician",
              "Technician_in_design_and_electronic_development",
              "Metrology_technician",
              "Refrigeration_and_air_conditioning_technician",
              "HSE_technician",
              "Industrial_IT_technician",
              "Industrial_equipment_installation_technician",
              "Electronic_installation_and_maintenance_technician",
              "Logistics_technician",
              "Maintenance_technician",
              "Methods_technician",
              "Photonics_technician",
              "Quality_technician",
              "R&D_technician",
              "Customer_support_technician",
              "Surface_treatment_technician",
              "Machining_technician",
              "Sales_technician",
              "Turner",
              "Industrial_pipefitter"
            ]
          },
          "society": {
            "type": "string"
          },
          "region": {
            "type": "string",
            "enum": [
              "regional",
              "national"
            ]
          },
          "vehicle": {
            "type": "string",
            "enum": [
              "car",
              "commercial_car",
              "pickup",
              "mini_bus",
              "van",
              "truck__dump_truck",
              "truck__refrigerated_truck",
              "truck__isothermal",
              "truck__tanker",
              "truck__bucket_truck",
              "truck__roll_amplifier",
              "truck__tow_truck",
              "truck__other",
              "semi_trailer__low_loader",
              "semi_trailer__single",
              "semi_trailer__container_carrier",
              "semi_trailer__tank",
              "semi_trailer__other",
              "Tuff_trailer",
              "Machine__loader",
              "Machine__mini_loader",
              "Machine__excavator",
              "Machine__backhoe_loader",
              "Machine__bulldozer",
              "Machine__scraper",
              "Machine__steamroller",
              "Machine__dumper",
              "Machine__grader",
              "Gear__others",
              "agricultural_machinery__tractor",
              "agricultural_machinery__combine_harvester",
              "agricultural_machinery__forage_harvester",
              "agricultural_machinery__harvester",
              "agricultural_machinery__mower",
              "agricultural_machinery__other",
              "others"
            ]
          },
          "Mark": {
            "type": "string"
          },
          "typestate": {
            "type": "string",
            "enum": [
              "new",
              "almost_new",
              "second_hand",
              "rental"
            ]
          },
          "formation_category": {
            "type": "string",
            "enum": [
              "Industry_training",
              "Computer_training",
              "Mechanical_Hydraulic,_Pneumatic_Training",
              "Language_training ",
              "Surface_treatment_training",
              "Safety_training",
              "Production_training",
              "Management_training",
              "Engineer_training",
              "Logistics_training",
              "Maintenance_training",
              "Apprenticeship",
              "Electricity_and_Electronics_training",
              "Choice_and_use_of_materials",
              "Commercial_training",
              "Quality_Control_Training",
              "Management__Communication_training",
              "Metrology_training",
              "Continuing_Professional_Training",
              "Automation_training",
              "Regulation__Instrumentation_training",
              "Training in_aeraulics_and_ventilation",
              "Training_in_industrial_acoustics",
              "Construction_training_Construction__Real_estate",
              "Environmental_training",
              "Laboratory_training",
              "Communication_training",
              "Microengineering_training",
              "Scientific_or_Mathematical_Training"
            ]
          },
          "author": {
            "required": [
              "id",
              "username",
              "lastname",
              "firstname",
              "email",
              "pass",
              "sexe",
              "status"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "username": {
                "type": "uid"
              },
              "lastname": {
                "type": "string"
              },
              "firstname": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "pass": {
                "type": "string"
              },
              "phone": {
                "type": "integer"
              },
              "birth_day": {
                "type": "string"
              },
              "sexe": {
                "type": "string",
                "enum": [
                  "homme",
                  "femme",
                  "none"
                ]
              },
              "wilaya": {
                "type": "string"
              },
              "commune": {
                "type": "string"
              },
              "profil_image_link": {
                "type": "string"
              },
              "instagram": {
                "type": "string"
              },
              "Twitter": {
                "type": "string"
              },
              "facebook": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "blocked",
                  "waiting",
                  "valid"
                ]
              },
              "lastConnect": {
                "type": "string"
              },
              "products": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "likes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "published_at": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "likers": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "username",
                "lastname",
                "firstname",
                "email",
                "pass",
                "sexe",
                "status"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "username": {
                  "type": "uid"
                },
                "lastname": {
                  "type": "string"
                },
                "firstname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "pass": {
                  "type": "string"
                },
                "phone": {
                  "type": "integer"
                },
                "birth_day": {
                  "type": "string"
                },
                "sexe": {
                  "type": "string",
                  "enum": [
                    "homme",
                    "femme",
                    "none"
                  ]
                },
                "wilaya": {
                  "type": "string"
                },
                "commune": {
                  "type": "string"
                },
                "profil_image_link": {
                  "type": "string"
                },
                "instagram": {
                  "type": "string"
                },
                "Twitter": {
                  "type": "string"
                },
                "facebook": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "blocked",
                    "waiting",
                    "valid"
                  ]
                },
                "lastConnect": {
                  "type": "string"
                },
                "products": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "likes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "published_at": {
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          },
          "cv_link": {
            "type": "string"
          },
          "work_proposal": {
            "type": "string",
            "enum": [
              "request",
              "offer"
            ]
          },
          "diploma": {
            "type": "string",
            "enum": [
              "none",
              "cep",
              "bem",
              "bac",
              "bt",
              "bts",
              "licence",
              "master",
              "doctorat",
              "other"
            ]
          },
          "transport_service": {
            "type": "string",
            "enum": [
              "none",
              "location",
              "driver"
            ]
          },
          "email": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "phone": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "NewProduct": {
        "required": [
          "title",
          "status",
          "description"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "category": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": "published",
            "enum": [
              "draft",
              "published"
            ]
          },
          "view": {
            "type": "integer",
            "default": 0
          },
          "like": {
            "type": "integer",
            "default": 0
          },
          "search": {
            "type": "integer",
            "default": 0
          },
          "lastConnect": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "adress": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "wilaya": {
                  "type": "string"
                },
                "commune": {
                  "type": "string"
                }
              }
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "link"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                }
              }
            }
          },
          "sector_work": {
            "type": "string",
            "enum": [
              "public_administration",
              "Agriculture",
              "Agri_food",
              "automobiles",
              "Construction_and_civil_engineering",
              "chemistry_and_para_chemistry",
              "trade_distribution",
              "communication_advertising_Media",
              "Cosmetic",
              "E_Commerce",
              "energy_environment",
              "Education_training",
              "studies_advises_assistance",
              "industry",
              "telecom_computing",
              "leisure_culture_sports",
              "not_disclosed",
              "health_social",
              "business_services",
              "headquarters",
              "subcontracting",
              "textiles",
              "logistic_transport",
              "wood_stone_metal_leather_work",
              "others"
            ]
          },
          "sector_product": {
            "type": "string",
            "enum": [
              "Agri_food",
              "food",
              "chemistry_and_para_chemistry",
              "commerce_distribution",
              "communication_gublicity_Media",
              "cosmetic",
              "e_commerce",
              "energy_environment",
              "industry",
              "telecom_computing",
              "leisure_culture_sports",
              "not_disclosed",
              "social_health",
              "business_services",
              "textiles",
              "woodwork_gjiéces_metals_leather",
              "others"
            ]
          },
          "profession": {
            "type": "string",
            "enum": [
              "Industrial_buyer",
              "Acoustician",
              "Computer_network_administrator",
              "Maintenance_agent",
              "Logistics_agent",
              "Continuous_improvement_coordinator",
              "Sales_assistant",
              "Executive_assistant",
              "HR_assistant",
              "Electrical_equipment_winder",
              "Forklift_operator",
              "Business_manager",
              "Communication_manager",
              "Boilermaker",
              "Team_leader",
              "Product_manager",
              "Mechanical_project_manager",
              "Coach,_skills_development",
              "Accountant",
              "Production_line_operator",
              "Management_controller",
              "Cleavage",
              "Industrial_designer",
              "Draftsman__designer",
              "Administrative_and_financial_director",
              "Director_of_design_office",
              "Commercial_director",
              "Director_of_company",
              "Production_manager",
              "R&D_director",
              "Human_resources_director",
              "Technical_director",
              "Electrical_technician",
              "Ergonomist",
              "Trainer",
              "Technical_trainer",
              "Milling_machine",
              "Payroll_manager",
              "Hydraulic_engineer",
              "Calculation__simulation_engineer",
              "Test_engineer",
              "Electronic_design_engineer",
              "Production_engineer",
              "Electrical_engineer",
              "Industrial_engineer",
              "Industrial_IT_engineer",
              "Materials_engineer",
              "Methods_engineer",
              "R&D_engineer",
              "Nuclear_safety_and_dismantling_engineer",
              "Systems_engineer",
              "Electronic_production_integrator",
              "Legal_expert",
              "Mechatronics_engineer",
              "Aluminum_carpenter",
              "Metallier_Carpentier",
              "Fitter__assembler",
              "Fitter__cable_worker",
              "Forge_operator",
              "Production_operator",
              "Metal_processing_operator",
              "Foundry_operator",
              "Operator_composite_materials",
              "Surface_treatment_operator",
              "Machining_operator",
              "Toolmaker",
              "Toolmaker",
              "Industrial_painter",
              "Industrial_production_system_pilot",
              "Industrial_polisher",
              "Technical_writer",
              "Communication_manager",
              "Production_unit_manager",
              "Industrial_analysis_laboratory_manager",
              "Training_manager",
              "Industrial_and_logistics_management_manager",
              "HSE_manager",
              "Maintenance_manager",
              "Marketing_manager",
              "Methods_manager",
              "Scheduling_manager",
              "IT_project_manager",
              "Quality_manager",
              "HR_manager",
              "Welder",
              "Test_technician",
              "Industrial_analysis_laboratory_technician",
              "Production_technician",
              "Electronics_test_technician",
              "Information_systems_technician",
              "Automation_technician",
              "Technician_in_design_and_electronic_development",
              "Metrology_technician",
              "Refrigeration_and_air_conditioning_technician",
              "HSE_technician",
              "Industrial_IT_technician",
              "Industrial_equipment_installation_technician",
              "Electronic_installation_and_maintenance_technician",
              "Logistics_technician",
              "Maintenance_technician",
              "Methods_technician",
              "Photonics_technician",
              "Quality_technician",
              "R&D_technician",
              "Customer_support_technician",
              "Surface_treatment_technician",
              "Machining_technician",
              "Sales_technician",
              "Turner",
              "Industrial_pipefitter"
            ]
          },
          "society": {
            "type": "string"
          },
          "region": {
            "type": "string",
            "enum": [
              "regional",
              "national"
            ]
          },
          "vehicle": {
            "type": "string",
            "enum": [
              "car",
              "commercial_car",
              "pickup",
              "mini_bus",
              "van",
              "truck__dump_truck",
              "truck__refrigerated_truck",
              "truck__isothermal",
              "truck__tanker",
              "truck__bucket_truck",
              "truck__roll_amplifier",
              "truck__tow_truck",
              "truck__other",
              "semi_trailer__low_loader",
              "semi_trailer__single",
              "semi_trailer__container_carrier",
              "semi_trailer__tank",
              "semi_trailer__other",
              "Tuff_trailer",
              "Machine__loader",
              "Machine__mini_loader",
              "Machine__excavator",
              "Machine__backhoe_loader",
              "Machine__bulldozer",
              "Machine__scraper",
              "Machine__steamroller",
              "Machine__dumper",
              "Machine__grader",
              "Gear__others",
              "agricultural_machinery__tractor",
              "agricultural_machinery__combine_harvester",
              "agricultural_machinery__forage_harvester",
              "agricultural_machinery__harvester",
              "agricultural_machinery__mower",
              "agricultural_machinery__other",
              "others"
            ]
          },
          "Mark": {
            "type": "string"
          },
          "typestate": {
            "type": "string",
            "enum": [
              "new",
              "almost_new",
              "second_hand",
              "rental"
            ]
          },
          "formation_category": {
            "type": "string",
            "enum": [
              "Industry_training",
              "Computer_training",
              "Mechanical_Hydraulic,_Pneumatic_Training",
              "Language_training ",
              "Surface_treatment_training",
              "Safety_training",
              "Production_training",
              "Management_training",
              "Engineer_training",
              "Logistics_training",
              "Maintenance_training",
              "Apprenticeship",
              "Electricity_and_Electronics_training",
              "Choice_and_use_of_materials",
              "Commercial_training",
              "Quality_Control_Training",
              "Management__Communication_training",
              "Metrology_training",
              "Continuing_Professional_Training",
              "Automation_training",
              "Regulation__Instrumentation_training",
              "Training in_aeraulics_and_ventilation",
              "Training_in_industrial_acoustics",
              "Construction_training_Construction__Real_estate",
              "Environmental_training",
              "Laboratory_training",
              "Communication_training",
              "Microengineering_training",
              "Scientific_or_Mathematical_Training"
            ]
          },
          "author": {
            "type": "string"
          },
          "likers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cv_link": {
            "type": "string"
          },
          "work_proposal": {
            "type": "string",
            "enum": [
              "request",
              "offer"
            ]
          },
          "diploma": {
            "type": "string",
            "enum": [
              "none",
              "cep",
              "bem",
              "bac",
              "bt",
              "bts",
              "licence",
              "master",
              "doctorat",
              "other"
            ]
          },
          "transport_service": {
            "type": "string",
            "enum": [
              "none",
              "location",
              "driver"
            ]
          },
          "email": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "phone": {
                  "type": "integer"
                }
              }
            }
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Slider": {
        "required": [
          "id",
          "image_background",
          "type",
          "index"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "image_background": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "default": "slider",
            "enum": [
              "pub",
              "slider"
            ]
          },
          "index": {
            "type": "integer",
            "default": 1
          },
          "html_integration": {
            "type": "object",
            "required": [
              "id",
              "fr",
              "en",
              "ar"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "fr": {
                "type": "string",
                "default": " "
              },
              "en": {
                "type": "string"
              },
              "ar": {
                "type": "string"
              }
            }
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewSlider": {
        "required": [
          "image_background",
          "type",
          "index"
        ],
        "properties": {
          "image_background": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "default": "slider",
            "enum": [
              "pub",
              "slider"
            ]
          },
          "index": {
            "type": "integer",
            "default": 1
          },
          "html_integration": {
            "type": "object",
            "required": [
              "id",
              "fr",
              "en",
              "ar"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "fr": {
                "type": "string",
                "default": " "
              },
              "en": {
                "type": "string"
              },
              "ar": {
                "type": "string"
              }
            }
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "UsersPermissionsRole": {
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "type",
                "controller",
                "action",
                "enabled"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "controller": {
                  "type": "string"
                },
                "action": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "policy": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          },
          "users": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "username",
                "email"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "resetPasswordToken": {
                  "type": "string"
                },
                "confirmationToken": {
                  "type": "string"
                },
                "confirmed": {
                  "type": "boolean"
                },
                "blocked": {
                  "type": "boolean"
                },
                "role": {
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewUsersPermissionsRole": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "UsersPermissionsUser": {
        "required": [
          "id",
          "username",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "minLength": 6
          },
          "provider": {
            "type": "string"
          },
          "confirmed": {
            "type": "boolean",
            "default": false
          },
          "blocked": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewUsersPermissionsUser": {
        "required": [
          "username",
          "email"
        ],
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "minLength": 6
          },
          "provider": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6
          },
          "resetPasswordToken": {
            "type": "string"
          },
          "confirmationToken": {
            "type": "string"
          },
          "confirmed": {
            "type": "boolean",
            "default": false
          },
          "blocked": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Category"
    },
    {
      "name": "Clients"
    },
    {
      "name": "Product"
    },
    {
      "name": "Slider"
    },
    {
      "name": "Email - Email"
    },
    {
      "name": "Upload - File"
    },
    {
      "name": "UsersPermissions - Role"
    },
    {
      "name": "UsersPermissions - User"
    }
  ]
}